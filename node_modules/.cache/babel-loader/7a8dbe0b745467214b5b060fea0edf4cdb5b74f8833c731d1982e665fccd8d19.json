{"ast":null,"code":"var _jsxFileName = \"/Users/shrooqsaleh/Desktop/clinic/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require('openai');\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const messages11 = [{\n    role: 'system',\n    content: `\n\t\tfirst you should say send an article. don't say anything else\n\t\tYou will classify the Sentiment of the article and word .\n\t\tthere is only four type of Sentiment:\n\t\tFear\n\t\tAnger\n\t\tJoy\n\t\tSad\n\t\tand also the Positive ratio out of 5 and and negative out of 5 .\n\t\tif the user ask anything else say sorry i can only analyze the articles and words.\n\t\tDo not write explanations.\n\t\tDon't ask him if he need any help. you are an analyst\n        `\n  }, {\n    role: 'assistant',\n    content: 'content: I am ready to be an analyst. '\n  }, {\n    role: 'user',\n    content: 'Hi'\n  }, {\n    role: 'assistant',\n    content: 'Hello, please send me an article to analyze'\n  }, {\n    role: 'user',\n    content: 'ChatGPT is overhyped. That is what I told myself after 2 weeks of failing to use it well Turns out, I was just a poor prompt writer. But after spending 100 hours with it, I have cracked it.And now, it is my personal research assistant and Python developer.'\n  }, {\n    role: 'assistant',\n    content: 'Classification:\\n' + 'Joy \\n' + 'Positive ratio: 5 out of 5 \\n' + 'Negative ratio: 0 out of 5'\n  }, {\n    role: 'user',\n    content: 'ChatGPT is scary good. We are not far from dangerously strong AI.'\n  }, {\n    role: 'assistant',\n    content: 'Classification:\\n' + 'Fear \\n' + 'Positive ratio: 0 out of 5 \\n' + 'Negative ratio: 5 out of 5'\n  }, {\n    role: 'user',\n    content: 'i don not feel good today'\n  }, {\n    role: 'system',\n    content: 'you can analyze a sentence'\n  }, {\n    role: 'assistant',\n    content: 'Classification:\\n' + 'Sad \\n' + 'Positive ratio: 0 out of 5 \\n' + 'Negative ratio: 5 out of 5'\n  }, {\n    role: 'user',\n    content: 'i will show you who i am '\n  }];\n  const handleChange = event => {\n    setCurrentMessage(event.target.value);\n  };\n  console.log(\"messages1>>>>>>\");\n  console.log(messages);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"messages2>>>>>>\");\n    console.log(messages);\n    setMessages([...messages, {\n      role: currentMessage,\n      content: currentMessage\n    }]);\n    setCurrentMessage(\"\");\n    // Add logic here to process the user's message and generate a response\n    sendMessageToChatGPT(currentMessage, messages);\n  };\n  async function sendMessageToChatGPT(message, chat_messages) {\n    const configuration = new Configuration({\n      apiKey: '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'\n    });\n    const openai = new OpenAIApi(configuration);\n    console.log(\"messages3>>>>>>\");\n    console.log(messages11);\n    const completion = await openai.createChatCompletion({\n      model: 'gpt-3.5-turbo',\n      messages: messages11,\n      temperature: 0,\n      max_tokens: 100\n    });\n    console.log(completion.data.choices[0].message);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.isUser ? \"chatbot-user-message\" : \"chatbot-bot-message\",\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chatbot-input\",\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: currentMessage,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-send-button\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Rb9fRLD1PruS4iXNKXdPLlbwo0E=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Configuration","OpenAIApi","require","Chatbot","_s","messages","setMessages","currentMessage","setCurrentMessage","messages11","role","content","handleChange","event","target","value","console","log","handleSubmit","preventDefault","sendMessageToChatGPT","message","chat_messages","configuration","apiKey","openai","completion","createChatCompletion","model","temperature","max_tokens","data","choices","className","children","map","index","isUser","text","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/shrooqsaleh/Desktop/clinic/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nconst { Configuration, OpenAIApi } = require('openai');\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const messages11 = [\n\t{\n\t\trole: 'system',\n\t\tcontent: `\n\t\tfirst you should say send an article. don't say anything else\n\t\tYou will classify the Sentiment of the article and word .\n\t\tthere is only four type of Sentiment:\n\t\tFear\n\t\tAnger\n\t\tJoy\n\t\tSad\n\t\tand also the Positive ratio out of 5 and and negative out of 5 .\n\t\tif the user ask anything else say sorry i can only analyze the articles and words.\n\t\tDo not write explanations.\n\t\tDon't ask him if he need any help. you are an analyst\n        `,\n\t},\n\t{\n\t\trole: 'assistant',\n\t\tcontent: 'content: I am ready to be an analyst. ',\n\t},\n\t{\n\t\trole: 'user',\n\t\tcontent: 'Hi',\n\t},\n\t{\n\t\trole: 'assistant',\n\t\tcontent: 'Hello, please send me an article to analyze'\n\t},\n\t{\n\t\trole: 'user',\n\t\tcontent: 'ChatGPT is overhyped. That is what I told myself after 2 weeks of failing to use it well Turns out, I was just a poor prompt writer. But after spending 100 hours with it, I have cracked it.And now, it is my personal research assistant and Python developer.'\n\t},\n\t{\n\t\trole: 'assistant',\n\t\tcontent: 'Classification:\\n' +\n\t\t \t  'Joy \\n' +\n\t\t \t  'Positive ratio: 5 out of 5 \\n' +\n\t\t \t  'Negative ratio: 0 out of 5'\n\t},\n\t{\n\t\trole: 'user',\n\t\tcontent: 'ChatGPT is scary good. We are not far from dangerously strong AI.'\n\t},\n\t{\n\t\trole: 'assistant',\n\t\tcontent: 'Classification:\\n' +\n\t\t  'Fear \\n' +\n\t\t  'Positive ratio: 0 out of 5 \\n' +\n\t\t  'Negative ratio: 5 out of 5'\n\t},\n\t{\n\t\trole: 'user',\n\t\tcontent: 'i don not feel good today'\n\t},\n\t{\n\t\trole: 'system',\n\t\tcontent: 'you can analyze a sentence'\n\t},\n\t{\n\t\trole: 'assistant',\n\t\tcontent: 'Classification:\\n' +\n\t\t  'Sad \\n' +\n\t\t  'Positive ratio: 0 out of 5 \\n' +\n\t\t  'Negative ratio: 5 out of 5'\n\t  },\n\t{\n\t\trole: 'user',\n\t\tcontent: 'i will show you who i am '\n\t}\n];\n  const handleChange = (event) => {\n    setCurrentMessage(event.target.value);\n  };\n  console.log(\"messages1>>>>>>\");\n  console.log(messages);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"messages2>>>>>>\");\n    console.log(messages);\n    setMessages([...messages, { role: currentMessage, content: currentMessage }]);\n    setCurrentMessage(\"\");\n    // Add logic here to process the user's message and generate a response\n    sendMessageToChatGPT(currentMessage,messages)\n  };\n  async function sendMessageToChatGPT(message, chat_messages) {\n\tconst configuration = new Configuration({\n\t\tapiKey: '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',\n\t});\n\tconst openai = new OpenAIApi(configuration);\n\n    console.log(\"messages3>>>>>>\");\n    console.log(messages11);\n\tconst completion = await openai.createChatCompletion({\n\t\tmodel: 'gpt-3.5-turbo',\n\t\tmessages: messages11,\n\t\ttemperature: 0,\n\t\tmax_tokens: 100,\n\t});\n\tconsole.log(completion.data.choices[0].message);\n}\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={message.isUser ? \"chatbot-user-message\" : \"chatbot-bot-message\"}\n          >\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <form className=\"chatbot-input-container\" onSubmit={handleSubmit}>\n        <input\n          className=\"chatbot-input\"\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={currentMessage}\n          onChange={handleChange}\n        />\n        <button className=\"chatbot-send-button\" type=\"submit\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}